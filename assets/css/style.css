/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Bold.eot");
  src:local("TT Norms Bold"), local("TTNorms-Bold"), url("../fonts/TTNorms-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Bold.woff2") format("woff2"), url("../fonts/TTNorms-Bold.woff") format("woff"), url("../fonts/TTNorms-Bold.ttf") format("truetype");
  font-weight:bold;
  font-style:normal;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Medium.eot");
  src:local("TT Norms Medium"), local("TTNorms-Medium"), url("../fonts/TTNorms-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Medium.woff2") format("woff2"), url("../fonts/TTNorms-Medium.woff") format("woff"), url("../fonts/TTNorms-Medium.ttf") format("truetype");
  font-weight:500;
  font-style:normal;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Regular.eot");
  src:local("TT Norms Regular"), local("TTNorms-Regular"), url("../fonts/TTNorms-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Regular.woff2") format("woff2"), url("../fonts/TTNorms-Regular.woff") format("woff"), url("../fonts/TTNorms-Regular.ttf") format("truetype");
  font-weight:normal;
  font-style:normal;
}
.page-footer__container, .publications__container, .cases, .team, .services__container, .experience__container, .page-header__container{
  width:min(100% - 40px, 1320px);
  margin-inline:auto;
}

.slider__header.active{
  background:linear-gradient(90.13deg, #EF8080 0.84%, #F0145A 99.96%);
  -webkit-background-clip:text;
  background-clip:text;
  -webkit-text-fill-color:transparent;
  -webkit-text-fill-color:transparent;
}

.content__header-title, .worker__description-quote, .services__title{
  background:linear-gradient(90.13deg, #F0145A 0.84%, #EF8080 99.96%);
  -webkit-background-clip:text;
  background-clip:text;
  -webkit-text-fill-color:transparent;
  -webkit-text-fill-color:transparent;
}

*,
*::before,
*::after{
  box-sizing:border-box;
}

html{
  font-size:16px;
  font-family:"TT Norms", sans-serif;
}

body{
  font-family:"TT Norms", sans-serif;
  font-size:16px;
  overflow-wrap:break-word;
  overflow-x:hidden;
}

a{
  text-decoration:none;
  color:#24a3ff;
}

address{
  font-style:normal;
}

h4{
  margin:0;
}

.visually-hidden{
  position:absolute;
  width:1px;
  height:1px;
  margin:-1px;
  border:0;
  padding:0;
  white-space:nowrap;
  clip-path:inset(100%);
  clip:rect(0 0 0 0);
  overflow:hidden;
}

.dot{
  width:6px;
  height:6px;
  border-radius:6px;
  background-color:#e6e6f0;
}

.line{
  width:100%;
  height:4px;
  background-color:#e6e6f0;
}

.page-header{
  position:relative;
  background:linear-gradient(42.01deg, #323264 14.33%, #323264 51.39%, #7A425E 87.53%);
}
.page-header::after{
  z-index:1;
  position:absolute;
  top:70%;
  right:0;
  bottom:0;
  left:0;
  content:"";
  background:linear-gradient(180deg, rgba(50, 50, 100, 0) 16.67%, #323264 100%);
}
.page-header__container{
  position:absolute;
  z-index:2;
  top:0;
  left:0;
  right:0;
  display:grid;
  grid-template-columns:auto 1fr;
  gap:20px;
}
.page-header__logo{
  grid-area:logo;
}
.page-header__menu{
  grid-area:menu;
}
.page-header__actions{
  grid-area:actions;
}
.page-header__content{
  position:relative;
  z-index:1;
  min-height:100vh;
  display:flex;
  justify-content:center;
  align-items:center;
  overflow:hidden;
}
.page-header__content-title{
  position:absolute;
  top:50%;
  left:50%;
  width:100%;
  max-width:600px;
  padding:20px;
  transform:translate(-50%, -50%);
  font-weight:500;
  line-height:45px;
  font-size:38px;
  text-align:center;
  color:#ffffff;
}
.page-header__content-image{
  transform:translateY(30%);
  height:100vh;
}
.page-header__button{
  position:absolute;
  z-index:2;
  bottom:20px;
  left:50%;
  cursor:pointer;
  transform:translateX(-50%);
}
.page-header__button:hover{
  opacity:0.4;
}

.menu{
  align-self:center;
}
.menu__btn{
  position:relative;
  width:30px;
  height:22.5px;
  margin-left:auto;
  cursor:pointer;
  transition:0.5s ease-in-out;
  transform:rotate(0deg);
}
.menu__btn-row{
  position:absolute;
  left:0;
  display:block;
  width:100%;
  height:3px;
  transition:0.25s ease-in-out;
  transform:rotate(0deg);
  opacity:1;
  border-radius:3px;
  background:#ffffff;
}
.menu__btn-row:nth-child(1){
  top:0;
}
.menu__btn-row:nth-child(2), .menu__btn-row:nth-child(3){
  top:9px;
}
.menu__btn-row:nth-child(4){
  top:18px;
}
.menu__btn.active span:nth-child(1){
  top:9px;
  left:50%;
  width:0;
}
.menu__btn.active span:nth-child(2){
  transform:rotate(45deg);
}
.menu__btn.active span:nth-child(3){
  transform:rotate(-45deg);
}
.menu__btn.active span:nth-child(4){
  top:9px;
  left:50%;
  width:0;
}
.menu__list{
  font-size:18px;
  margin:0;
  padding:0;
  list-style:none;
}
.menu__link{
  display:block;
  color:#ffffff;
}
.menu__link.active{
  color:#f0145a;
}

.actions{
  display:flex;
  align-items:center;
  gap:10px;
}
.actions__languages{
  display:flex;
  gap:2px;
}
.actions__language-link{
  display:block;
  padding:5px 6px;
  border-radius:8px;
  font-weight:700;
  font-size:12px;
  line-height:14px;
  letter-spacing:1px;
  color:#ffffff;
  cursor:pointer;
}
.actions__language-link.active{
  background-color:#f0145a;
  color:#ffffff;
  transition:all 0.3s ease;
}
.actions__language-link:hover{
  background-color:#f0145a;
  color:#ffffff;
}
.actions__locations-link{
  font-size:16px;
  line-height:19px;
  color:#ffffff;
}
.actions__locations-link:hover{
  color:#f0145a;
}
.actions__phone-link{
  color:#ffffff;
  font-weight:700;
  font-size:16px;
  line-height:19px;
  white-space:nowrap;
}
.actions__phone-link:hover{
  color:#f0145a;
}
.actions__socials-image{
  border:2px solid transparent;
  margin:0;
}
.actions__socials-image:hover{
  border:2px solid #f0145a;
  border-radius:50%;
}

.experience{
  background-color:#323264;
  padding-top:80px;
  padding-bottom:80px;
}

.slider{
  display:flex;
}
.slider__headers{
  position:relative;
  display:flex;
  flex-basis:0;
  flex-direction:column;
  flex-grow:2;
  gap:20px;
  z-index:10;
  cursor:pointer;
}
.slider__header{
  position:relative;
  user-select:none;
  color:#b3b3ba;
  font-family:"TT Norms";
  font-size:42px;
  line-height:50px;
  margin:0;
}
.slider__header.active::after{
  position:absolute;
  z-index:1;
  right:-42px;
  width:4px;
  height:100%;
  content:"";
  background-color:#f0145a;
}
.slider__header:hover{
  color:transparent;
  background-clip:text;
  -webkit-background-clip:text;
  background-image:linear-gradient(90.13deg, #F0145A 0.84%, #EF8080 99.96%);
  transition:color 0.3s ease;
}
.slider__notes{
  display:flex;
  align-items:center;
  flex-basis:0;
  flex-grow:3;
  color:#ffffff;
  max-width:600px;
  overflow-wrap:anywhere;
}
.slider__note{
  position:absolute;
  z-index:-100;
  opacity:0;
}
.slider__note.active{
  position:static;
  z-index:inherit;
  opacity:1;
}
.slider__title{
  margin-bottom:20px;
  font-weight:500;
  font-size:22px;
  line-height:26px;
}
.slider__description{
  max-width:600px;
  font-size:18px;
  line-height:26px;
}
.slider__indicators{
  display:flex;
  justify-content:center;
  gap:14px;
  cursor:pointer;
}
.slider__indicator{
  width:16px;
  height:16px;
  opacity:0.2;
  border-radius:8px;
  background-color:#24a3ff;
}
.slider__indicator.active{
  opacity:1;
}
.slider__indicator:hover{
  background-color:#0085ff;
}

.services{
  position:relative;
  border-radius:0 0 12px 12px;
  background:linear-gradient(228.57deg, #323264 11.93%, #323264 57.17%, #643E72 87.46%);
  padding-top:20px;
}
.services::before{
  position:absolute;
  top:100%;
  right:20px;
  left:20px;
  height:20px;
  content:"";
  border-radius:0 0 12px 12px;
  background-color:#e7e7f2;
}
.services::after{
  position:absolute;
  top:100%;
  right:10px;
  left:10px;
  height:10px;
  content:"";
  border-radius:0 0 12px 12px;
  background-color:#cacadb;
}
.services__subtitle-link{
  letter-spacing:1px;
  text-transform:uppercase;
  color:rgba(255, 255, 255, 0.5);
  font-size:14px;
  line-height:17px;
}
.services__subtitle-link:hover{
  opacity:0.4;
}
.services__subtitle-arrow{
  width:12px;
  height:12px;
}
.services__content{
  display:grid;
  gap:30px;
  align-items:baseline;
  overflow-wrap:anywhere;
}

.service-item{
  display:flex;
  flex-direction:column;
  justify-content:flex-start;
  align-items:flex-start;
  text-align:left;
  gap:20px;
  max-width:420px;
}
.service-item__title{
  font-weight:600;
  font-size:25px;
  line-height:1.4;
  margin:0;
  margin-bottom:1px;
  color:#24a3ff;
}
.service-item__description{
  font-size:18px;
  line-height:1.39;
  margin:0;
  max-width:420px;
  color:#ffffff;
}
.service-item__picture{
  order:-1;
}

.team{
  padding-top:60px;
  padding-bottom:40px;
}
.team__container{
  display:flex;
  flex-direction:column;
  gap:20px;
}
.team__indicators{
  display:flex;
  justify-content:center;
  gap:14px;
  cursor:pointer;
}
.team__indicator{
  width:16px;
  height:16px;
  opacity:0.2;
  border-radius:8px;
  background-color:#24a3ff;
}
.team__indicator.active{
  opacity:1;
}
.team__indicator:hover{
  background-color:#0085ff;
}

.worker{
  display:flex;
  background-color:#f5f5fa;
  border-radius:12px;
  gap:40px;
}
.worker__photo{
  display:flex;
  align-items:center;
}
.worker__photo-image{
  height:auto;
  width:413px;
}
.worker__subheader{
  margin-bottom:5px;
}
.worker__subheader-link{
  text-transform:uppercase;
  font-size:14px;
  font-weight:700;
  line-height:1.2;
  letter-spacing:1px;
  color:#24a3ff;
}
.worker__subheader-link:hover{
  opacity:0.4;
}
.worker__subheader-arrow{
  width:12px;
  height:12px;
}
.worker__description{
  padding:40px 30px 20px 0px;
}
.worker__description-quote{
  font-weight:700;
  font-size:42px;
  line-height:1.1;
  margin:0 0 20px;
}
.worker__data{
  display:grid;
  grid-template-areas:"pht name" "pht pst";
  justify-content:start;
  align-items:center;
}
.worker__data-ava{
  display:none;
  grid-area:pht;
}
.worker__data-name{
  font-weight:500;
  font-size:18px;
  line-height:1.2;
  color:#b3b3ba;
  margin-bottom:5px;
  grid-area:name;
}
.worker__data-position{
  font-weight:400;
  font-size:16px;
  line-height:1.2;
  color:#b3b3ba;
  grid-area:pst;
  padding-bottom:4px;
}

.cases{
  background-color:#f5f5fa;
  overflow:hidden;
  border-radius:12px;
  margin-top:10px;
}

.case-item{
  display:flex;
  justify-content:space-between;
  flex-wrap:wrap;
  border-radius:12px;
  overflow-wrap:anywhere;
}
.case-item__one{
  width:32.80303%;
  min-height:255px;
  display:flex;
  flex-direction:column;
  border-bottom:1px solid #ffffff;
  border-right:1px solid #ffffff;
  justify-content:flex-end;
}
.case-item__one-title{
  background-color:#f5f5fa;
  width:100%;
  border-bottom:1px solid #ffffff;
  padding:20px;
}
.case-item__one-link{
  font-weight:700;
  font-size:14px;
  line-height:1.2;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#f0145a;
  background-color:#f5f5fa;
  cursor:pointer;
}
.case-item__one-link:hover{
  color:#24a3ff;
}
.case-item__two{
  background-color:#f5f5fa;
  width:34.39394%;
  min-height:255px;
  border-bottom:1px solid #ffffff;
  border-right:1px solid #ffffff;
  display:flex;
  flex-direction:column;
  justify-content:flex-end;
}
.case-item__three{
  background-color:#f5f5fa;
  width:31.803%;
  min-height:255px;
  border-right:1px solid #ffffff;
  border-bottom:1px solid #ffffff;
  display:flex;
  flex-direction:column;
  justify-content:flex-end;
}
.case-item__four{
  width:24.24242%;
  min-height:198px;
  border-bottom:1px solid #ffffff;
  border-right:1px solid #ffffff;
  display:flex;
  flex-direction:column;
  justify-content:flex-end;
}
.case-item__five{
  width:34.31818%;
  min-height:198px;
  border-bottom:1px solid #ffffff;
  border-right:1px solid #ffffff;
  display:flex;
  flex-direction:column;
  justify-content:flex-end;
}
.case-item__six{
  width:40.43939%;
  min-height:198px;
  border-bottom:1px solid #ffffff;
  display:flex;
  flex-direction:column;
  justify-content:flex-end;
}
.case-item__content{
  padding:20px;
  display:flex;
  flex-direction:column;
  justify-content:flex-end;
  background-color:#f5f5fa;
}
.case-item__content :hover{
  color:#f0145a;
}
.case-item__content-header{
  font-weight:500;
  font-size:24px;
  line-height:28px;
  color:#686887;
  margin:0;
}
.case-item__content-company{
  font-weight:400;
  font-size:18px;
  line-height:1.44;
  color:#b3b3ba;
  margin-top:20px;
}

.clients{
  display:flex;
  flex-direction:column;
  align-items:center;
}
.clients__header{
  font-weight:700;
  font-size:14px;
  line-height:17px;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#323264;
  text-align:center;
  margin-bottom:30px;
  margin-top:30px;
}
.clients__content{
  display:grid;
  grid-template-columns:repeat(4, 1fr);
}
.clients__content-link{
  height:120px;
}
.clients__content-logo{
  width:100%;
  height:120px;
  object-fit:cover;
}
.clients__content-logo:hover{
  opacity:0.4;
}

.publications{
  background-color:#f5f5fa;
  padding-top:40px;
  padding-bottom:100px;
  position:relative;
  overflow:hidden;
}
.content__header-link{
  font-weight:700;
  font-size:14px;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#24a3ff;
}
.content__header-link:hover{
  opacity:0.4;
}
.content__header-title{
  font-weight:700;
  font-size:42px;
  margin-top:4px;
}
.content__blocks{
  column-count:3;
  column-gap:40px;
  column-width:auto;
}
.content__btn{
  position:absolute;
  z-index:2;
  bottom:40px;
  left:50%;
  transform:translateX(-50%);
}
.content__btn-blue{
  background:#24a3ff;
  box-shadow:0px 0px 20px rgba(36, 163, 255, 0.5);
  border-radius:12px;
  border:none;
  color:#ffffff;
  font-weight:700;
  font-size:14px;
  text-align:center;
  padding:16px 16px;
  width:250px;
  cursor:pointer;
}
.content__btn-blue:hover{
  background:#0085ff;
}

.block{
  border-radius:8px;
  background-color:#ffffff;
  margin-bottom:40px;
  overflow:hidden;
  display:flex;
  flex-direction:column;
}
.block__img{
  display:block;
}
.block__img-pic{
  width:100%;
  height:233px;
  object-fit:cover;
}
.block__body{
  padding:20px;
}
.block__body-title{
  font-weight:500;
  font-size:18px;
  color:#24a3ff;
}
.block__body-title:hover{
  color:#f0145a;
}
.block__body-date{
  font-weight:700;
  font-size:12px;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#b3b3ba;
  margin-top:10px;
  margin-bottom:20px;
}
.block__body-description{
  padding-top:20px;
  font-size:16px;
  line-height:22px;
  color:#000000;
}

.block:hover{
  box-shadow:0px 0px 24px #cacadb;
}

.page-footer{
  background-color:#f5f5fa;
}
.page-footer__content{
  padding-top:32px;
  padding-bottom:35px;
  display:flex;
  justify-content:space-between;
}
.page-footer__content-info{
  display:flex;
  flex-wrap:wrap;
  column-gap:18px;
  row-gap:22px;
  flex-basis:460px;
  align-items:center;
}
.page-footer__content-address{
  font-weight:500;
  font-size:16px;
  color:#323264;
  max-width:250px;
}
.page-footer__content-link{
  font-weight:700;
  font-size:12px;
  line-height:14px;
  letter-spacing:1px;
  text-transform:uppercase;
  color:#24a3ff;
}
.page-footer__content-link:hover{
  color:#f0145a;
}
.page-footer__content-social{
  font-size:38px;
  color:#24a3ff;
  margin:0;
}
.page-footer__content-social:hover{
  color:#f0145a;
}
.page-footer__content-phone{
  font-weight:700;
  font-size:16px;
  color:#46466e;
}
.page-footer__content-phone:hover{
  color:#f0145a;
}
.page-footer__content-email{
  font-weight:700;
  font-size:16px;
  color:#24a3ff;
}
.page-footer__content-email:hover{
  color:#f0145a;
}
.page-footer__content-copyright{
  font-weight:500;
  font-size:16px;
  color:#b3b3ba;
  text-align:right;
  max-width:340px;
}
@media (min-width: 480px){
  .publications{
    max-height:872px;
  }
  .publications::after{
    z-index:1;
    position:absolute;
    top:88%;
    right:0;
    bottom:0;
    left:0;
    content:"";
    background:linear-gradient(180deg, rgba(245, 245, 250, 0) 0%, #F5F5FA 86.5%);
  }
}
@media (min-width: 576px){
  .page-header::before{
    position:absolute;
    top:0;
    right:0;
    bottom:0;
    left:0;
    content:"";
    background-position:50% 100%;
    background-size:100vh;
    background-image:url(../img/pattern.svg);
    background-repeat:no-repeat;
  }
  .menu__btn{
    display:none;
  }
  .menu__list{
    display:flex;
    justify-content:flex-end;
    gap:15px;
  }
  .menu__link{
    padding:0.25em 0;
  }
  .actions{
    justify-content:flex-end;
  }
  .services__title{
    margin-bottom:60px;
    font-size:42px;
  }
}
@media (min-width: 768px){
  .experience{
    padding-top:80px;
    padding-bottom:80px;
  }
  .slider{
    gap:80px;
    padding-right:35px;
  }
  .slider__headers::after{
    position:absolute;
    right:-42px;
    width:4px;
    height:100%;
    content:"";
    background-color:#e6e6f0;
  }
  .slider__header{
    text-align:right;
    font-size:42px;
  }
  .slider__title{
    font-size:32px;
    line-height:38px;
  }
  .slider__description{
    font-size:21px;
    line-height:30px;
    margin-top:25px;
  }
  .slider__indicator{
    display:none;
  }
  .services__title{
    width:max-content;
  }
  .clients__header{
    max-width:750px;
  }
}
@media (min-width: 992px){
  .services{
    padding-bottom:100px;
  }
  .services__content{
    grid-template-columns:repeat(3, 1fr);
  }
}
@media (min-width: 1200px){
  .page-header__container{
    grid-template-areas:"logo actions" "logo menu";
    padding-top:50px;
  }
  .services__title{
    max-width:950px;
  }
  .service-item{
    max-width:420px;
  }
  .service-item__description{
    max-width:420px;
  }
  .worker__description-quote{
    max-width:827px;
  }
  .worker__data-name{
    max-width:825px;
  }
  .worker__data-position{
    max-width:825px;
  }
  .clients__header{
    max-width:950px;
  }
}
@media (max-width: 1199.8px){
  .page-header__container{
    grid-template-areas:"logo actions" "logo menu";
    padding-top:50px;
  }
  .slider__description{
    max-width:530px;
  }
  .services__title{
    max-width:880px;
  }
  .services__content{
    row-gap:60px;
    column-gap:65px;
  }
  .service-item{
    max-width:310px;
  }
  .service-item__description{
    max-width:310px;
  }
  .worker__description-quote{
    max-width:550px;
  }
  .worker__data-name{
    max-width:550px;
  }
  .worker__data-position{
    max-width:550px;
  }
}
@media (max-width: 991.8px){
  .slider{
    padding-right:0;
  }
  .slider__header{
    font-size:35px;
  }
  .slider__description{
    max-width:300px;
  }
  .services__title{
    max-width:750px;
  }
  .services__content{
    justify-items:center;
  }
  .service-item{
    justify-content:center;
    align-items:center;
    text-align:center;
  }
  .worker__photo-image{
    width:300px;
    height:fit-content;
  }
  .worker__description{
    padding:20px 20px 20px 0px;
  }
  .worker__description-quote{
    font-size:35px;
    max-width:400px;
  }
  .worker__data-name{
    max-width:400px;
  }
  .worker__data-position{
    max-width:400px;
  }
  .case-item__one{
    width:50%;
  }
  .case-item__two{
    width:50%;
  }
  .case-item__three{
    width:50%;
  }
  .case-item__four{
    width:50%;
  }
  .case-item__five{
    width:50%;
  }
  .case-item__six{
    width:50%;
  }
  .clients__content{
    grid-template-columns:repeat(3, 1fr);
  }
}
@media (max-width: 991.8px) and (min-width: 576px){
  .services{
    padding-bottom:50px;
  }
  .services__content{
    grid-template-columns:repeat(2, 1fr);
  }
}
@media (max-width: 767.8px){
  .dot{
    display:none;
  }
  .page-header__container{
    grid-template-areas:"actions actions" "logo logo" "menu menu";
    justify-items:center;
    padding-top:30px;
  }
  .page-header__actions{
    gap:20px;
  }
  .experience{
    padding-top:40px;
    padding-bottom:45px;
  }
  .slider{
    flex-direction:column;
    align-items:center;
  }
  .slider__headers{
    align-items:center;
  }
  .slider__header{
    display:none;
    width:min-content;
    margin-bottom:10px;
    white-space:nowrap;
    letter-spacing:1px;
    text-transform:uppercase;
    font-size:14px;
  }
  .slider__header.active::after{
    display:none;
  }
  .slider__header.active{
    display:block;
  }
  .slider__note{
    text-align:center;
  }
  .slider__title{
    margin-bottom:15px;
    font-size:22px;
  }
  .slider__description{
    margin-bottom:20px;
    font-size:18px;
    max-width:500px;
  }
  .services__title{
    max-width:550px;
  }
  .services__content{
    grid-template-columns:1fr;
  }
  .service-item{
    gap:10px;
    max-width:500px;
  }
  .service-item__description{
    max-width:500px;
  }
  .worker__photo-image{
    width:250px;
  }
  .worker__description-quote{
    font-size:28px;
    max-width:320px;
    text-align:center;
  }
  .worker__data-name{
    max-width:320px;
  }
  .worker__data-position{
    max-width:320px;
  }
  .cases{
    margin-top:0;
  }
  .clients__content{
    grid-template-columns:repeat(2, 1fr);
  }
  .content__blocks{
    column-count:2;
  }
}
@media (max-width: 575.8px){
  .page-header__container{
    grid-template-areas:"actions actions" "logo menu";
    padding-top:20px;
    justify-items:stretch;
    padding-top:50px;
  }
  .page-header__logo-img{
    width:76px;
  }
  .menu__list{
    position:absolute;
    top:100%;
    right:0;
    left:0;
    display:none;
    padding:20px;
    text-align:center;
    background-color:rgba(50, 50, 100, 0.9);
    box-shadow:1px 3px 10px rgba(0, 0, 0, 0.5);
  }
  .menu__link{
    padding:0.5em 1em;
  }
  .actions{
    justify-content:space-between;
  }
  .actions__language-link{
    color:#b3b3ba;
  }
  .actions__locations{
    display:none;
  }
  .actions__phone-link{
    color:#b3b3ba;
  }
  .actions__socials{
    display:none;
  }
  .experience{
    padding-top:35px;
  }
  .slider__headers{
    align-items:flex-start;
  }
  .slider__notes{
    max-width:550px;
  }
  .slider__note{
    text-align:left;
  }
  .slider__title{
    margin-top:1px;
  }
  .slider__description{
    max-width:400px;
  }
  .services{
    padding-bottom:20px;
  }
  .services__title{
    margin-bottom:40px;
    max-width:400px;
    font-size:32px;
    line-height:38px;
  }
  .services__content{
    row-gap:47px;
  }
  .service-item{
    max-width:360px;
  }
  .service-item__description{
    max-width:360px;
  }
  .team{
    padding-top:40px;
  }
  .team__container{
    gap:15px;
  }
  .worker{
    gap:20px;
    justify-content:center;
  }
  .worker__photo-image{
    display:none;
  }
  .worker__subheader{
    text-align:center;
  }
  .worker__description-quote{
    max-width:300px;
  }
  .worker__data{
    column-gap:10px;
  }
  .worker__data-ava{
    display:block;
  }
  .worker__data-name{
    font-size:16px;
    max-width:300px;
  }
  .worker__data-position{
    max-width:300px;
  }
  .case-item__one{
    width:100%;
  }
  .case-item__two{
    width:100%;
  }
  .case-item__three{
    width:100%;
  }
  .case-item__four{
    width:100%;
  }
  .case-item__five{
    width:100%;
  }
  .case-item__six{
    width:100%;
  }
  .case-item__content{
    justify-content:center;
  }
  .clients__header{
    max-width:360px;
  }
  .page-footer__content{
    flex-direction:column;
    gap:5px;
    padding-bottom:118px;
    padding-top:20px;
    align-items:center;
  }
  .page-footer__content-info{
    flex-basis:200px;
    flex-direction:column;
    row-gap:18px;
  }
  .page-footer__content-copyright{
    max-width:335px;
    text-align:center;
  }
}
@media (max-width: 479.8px){
  .hide{
    display:none;
  }
  .slider{
    display:block;
  }
  .slider__notes{
    max-width:450px;
  }
  .slider__description{
    max-width:320px;
  }
  .services__title{
    margin-top:0;
    margin-bottom:22px;
    max-width:410px;
  }
  .service-item__description{
    max-width:340px;
    font-size:16px;
    line-height:22px;
  }
  .case-item__one{
    min-height:140px;
  }
  .case-item__two{
    min-height:140px;
  }
  .case-item__three{
    min-height:140px;
  }
  .case-item__four{
    min-height:140px;
  }
  .case-item__five{
    min-height:140px;
  }
  .case-item__six{
    min-height:140px;
  }
  .case-item__content-header{
    font-size:18px;
    line-height:21px;
  }
  .case-item__content-company{
    margin-top:10px;
    margin-bottom:0;
  }
  .clients__content-link{
    height:90px;
  }
  .clients__content-logo{
    height:90px;
  }
  .content__header{
    padding-bottom:20px;
  }
  .content__header-title{
    font-size:32px;
    margin-bottom:0;
    margin-top:2px;
  }
  .content__blocks{
    column-count:1;
    display:flex;
    flex-direction:column-reverse;
    margin-bottom:8px;
  }
  .block{
    margin-bottom:20px;
  }
  .block:first-child{
    order:1;
  }
  .block__body-date{
    margin-bottom:0;
  }
  .block__body-description{
    display:none;
  }
}
@media (max-width: 419.8px){
  .slider__notes{
    max-width:400px;
  }
  .slider__description{
    max-width:290px;
  }
  .services__title{
    max-width:300px;
  }
  .service-item{
    display:grid;
    grid-template-columns:auto 1fr;
    text-align:left;
    gap:12px;
    max-width:350px;
  }
  .service-item__title{
    font-size:18px;
    line-height:21px;
  }
  .service-item__description{
    grid-column:1/span 3;
    max-width:350px;
  }
  .service-item__image{
    width:65px;
    height:65px;
  }
  .worker{
    justify-content:flex-start;
  }
  .worker__subheader{
    text-align:left;
  }
  .worker__description-quote{
    margin:0 0 17px;
    text-align:left;
    max-width:260px;
  }
  .worker__data-name{
    max-width:260px;
  }
  .worker__data-position{
    max-width:260px;
  }
}
@media (max-width: 359.8px){
  .slider__notes{
    max-width:335px;
  }
  .slider__description{
    max-width:220px;
  }
  .clients__header{
    max-width:250px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */